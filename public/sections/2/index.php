<p align="justify"> <strong>Autor: </strong> Rogério Júnior </p>
<p align="justify"> <strong>Fonte: </strong> <a href="http://noic.com.br"> Noic</a> </p>
<h1> 1.2 - Estruturas Condicionais</h1>
<p align="justify">É quase impossível encontrar, hoje, problemas que se resolvam sem o uso de "<strong>if/else</strong>". O <strong>if </strong>significa "se" e é como usamos os operadores lógicos de uma linguagem. Ele condiciona um comando a uma condição qualquer, executando-o apenas se ela for verdadeira. Sua gramática é "<strong>if(condição){ faça isso }</strong>". Ou seja, chamamos o <strong>if</strong>, abrimos parênteses e dentro deles inserimos uma condição qualquer. Se a condição for verdadeira, o programa executará tudo que está dentro das chaves que sucedem o <strong>if</strong>. Vale lembrar que, se dentro das chaves houver um único comando, elas não são necessárias e o programa executará o comando seguinte ao <strong>if </strong>somente se a condição nele for verdadeira. Observe que não é necessário inserir "<strong>;</strong>" após as chaves.</p>
<br/>
<p align="justify">Desse modo, uma linha que imprime um número salvo em uma variável chamada <strong>x</strong> somente se ele for maior que 10 fica assim: "<strong>if(x&gt;10){ printf("%d", x);}</strong>"<strong> </strong>ou simplesmente "<strong>if(x&gt;10) printf("%d", x);</strong>". Além disso, após um <strong>if</strong>, também podemos chamar um <b>else</b>, que significa "senão". A gramática seria "<strong>if(condição){ faça isso } else {faça aquilo}</strong>", ou seja, se a condição for verdadeira, faça isso, se não (se ela for falsa) faça aquilo. Lembre-se que o que está entre as chaves pode ser qualquer série de comandos, inclusive outros <strong>if</strong>'s e <strong>else</strong>'s. Dito isso, uma linha que salvaria o módulo de um inteiro <strong>x </strong>em uma variável <strong>mod</strong> seria:  "<strong>if( x&gt;0 ){ mod=x } else { mod = -x}</strong>". Vale lembrar que o operador de igualdade é<b> </b>"==", e não "=". Para imprimir um número <strong>x</strong> apenas se ele for igual a 5, devemos escrever "<strong>if(x==5) printf("%d", x);</strong>". Lembre-se que "=" significa recebe e "<b>if(x=5)</b>" faria a variável <strong>x </strong>receber o valor 5. Outros operadores comuns são o de diferença (!=), o de menor ou igual (&lt;=), maior ou igual (&gt;=), menor que (&lt;) e maior que (&gt;).</p>
<br/>
<p align="justify">Estudar o <strong>if</strong> envolve estudar os operadores lógicos "&amp;&amp;" e "||". O "&amp;&amp;" ou "<strong>and</strong>" significa "e", ou seja, se escrevermos "<strong>if(condição1 &amp;&amp; condição2){ faça isso }</strong>", o programa fará <strong>isso </strong>apenas se a <strong>condição1 </strong>e a <strong>condição2</strong> forem ambas verdade. Ele pode ser usado várias vezes, ou seja, se quisermos fazer algo apenas se três condições forem verdade ao mesmo tempo, podemos escrever "<strong>if(condição1 &amp;&amp; condição2 &amp;&amp; condiçao3)</strong>".</p>
<br/>
<p align="justify">O operador "||" ou "<strong>or</strong>" significa ou, ou seja, se escrevermos "<strong>if(condição1 || condição2){ faça isso }</strong>", o programa fará <strong>isso </strong>se a <strong>condição1 </strong>ou <strong>condição2</strong> forem verdade. Assim como o &amp;&amp; ele também pode ser usado várias vezes. Dito isso, vejamos o código de um programa que lê um número <strong>n</strong> na tela e, em seguida, imprime uma linha escrita "esta no intervalo" se um número estiver entre 5 e 10 (incluindo 5 e 10) e que imprime "nao esta no intervalo" caso contrário.</p>
<style>.gist table { margin-bottom: 0; }</style>
<style>.gist table { margin-bottom: 0; }</style>
<p><script src="https://gist.github.com/rogerioagjr/73d59697935b979defb8.js"></script></p>

